이미 누가 작업중인 경우의 수

1. 무작정 기다린다 -> 안에 있는 사람이 늦게 나온다면 시간낭비가 심하다
2. 일단 자리로 가서 나중에 다시 온다 -> 너무 랜덤으로 들어가게 됨
3. 직원한테 부탁한다 -> 본인한텐 좋지만 직원한텐 부담이 된다 (ex) 100명이 부탁하면 부담 100배)

Lock의 처리가 어떻게 되는지에 따라 성능의 차이가 생기므로 여러 방법이 있다
1번의 경우 SpinLock의 개념 -> 기다리는 것도 이미 점유를 하는 것이므로 cpu에서 점유율이 높아질 수 있음
2번의 경우 -> 쓰레드는 누군가 실행한 것이므로 자리로 가는 것은 소유권을 포기하고 다른 작업을 할 수 있게 되는건데 이 또한 부담이 있긴 하지만 시간적으로는 이득을 볼 수 있다.
3번의 경우 -> 2번과 비슷하지만 운영체제에게 부탁하여 이벤트라는 방식을 이용한 것임 