한 식당(프로세스)에서 직원(쓰레드)이 주방(코어)에 주문(변수) 내용을 전달해야 요리를 할 수 있는데
이 때 주방에 전달하기 위해서 주문 현황(메인메모리)에 주문 내용을 올리면 원격으로 주방에서 확인하는 형태임
직원과 주문 현황이 멀기 때문에 주문을 받자마자 가서 내용을 올리는게 아니라 본인한테 쌓고 모아서 올리는 방식(레지스터, 캐시)을 생각함
이 경우 또 다른 장점은 주문을 번복했을 경우 본인이 들고 있는 정보만 바꾸면 되는 것임
이 때 문제는 직원이 여러명인 경우 직원이 들고있는 정보는 서로 공유를 하지 않으므로 혼선이 벌어짐

캐시 철학
1) Temporal locality - 시간적으로 방금 주문한 테이블에서 추가 주문이 나올 확률이 높다. 방금 주문한걸 메모하면 편할듯
2) Spacial locality - 공간적으로 방금 주문한 사람 근처에 있는 사람이 추가 주문할 확률이 높다. 방금 주문한 사람과 합석한 사람들의 주문 목록도 메모하면 편할듯

멀티 스레드에서 가정이 깨지므로 중요한 정보면 램에 반드시 넘겨야하는 문제점이 있음




